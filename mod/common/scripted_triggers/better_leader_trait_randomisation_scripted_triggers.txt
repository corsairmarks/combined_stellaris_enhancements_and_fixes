# leader
has_xp_bonus_leader_trait = {
	optimize_memory
	OR = {
		has_trait = leader_trait_adaptable
		has_trait = leader_trait_flexible_programming
	}
}

# leader
has_xp_penalty_leader_trait = {
	optimize_memory
	OR = {
		has_trait = leader_trait_stubborn
		has_trait = leader_trait_rigid_programming
	}
}

# leader that is a scientist
is_scientist_surveying = {
	optimize_memory
	exists = fleet
	OR = {
		fleet = {
			OR = {
				has_fleet_order = survey_planet_order
				has_fleet_order = auto_explore_order
				has_fleet_order = explore_bypass_order
			}
		}
		has_leader_flag = was_recently_surveying
	}
}

# leader that is a scientist
is_scientist_researching_poi = {
	optimize_memory
	exists = fleet
	OR = {
		fleet = {
			OR = {
				has_fleet_order = collect_data_fleet_order # debries/ambient object
				has_fleet_order = research_anomaly_order # anomaly
				has_fleet_order = research_discovery_order # unspecified
			}
		}
		has_leader_flag = was_recently_researching_poi # TODO: can trigger this now with an on_action
	}
}

# leader that is a scientist
is_scientist_excavating = {
	optimize_memory
	exists = fleet
	OR = {
		fleet = { has_fleet_order = excavate_archaeological_site_fleet_order }
		has_leader_flag = was_recently_excavating
	}
}

# leader that is a scientist
is_scientist_assisting_research = {
	optimize_memory
	exists = fleet
	fleet = { has_fleet_order = assist_research_order }
}

# leader that is a scientist
is_scientist_researching = {
	optimize_memory
	OR = {
		is_researching_area = physics
		is_researching_area = society
		is_researching_area = engineering
	}
}

# leader that is a scientist
has_scientist_expertise = {
	optimize_memory
	OR = {
		has_trait = leader_trait_expertise_field_manipulation
		has_trait = leader_trait_expertise_particles
		has_trait = leader_trait_expertise_computing
		has_trait = leader_trait_expertise_psionics
		has_trait = leader_trait_expertise_new_worlds
		has_trait = leader_trait_expertise_statecraft
		has_trait = leader_trait_expertise_biology
		has_trait = leader_trait_expertise_military_theory
		has_trait = leader_trait_expertise_materials
		has_trait = leader_trait_expertise_propulsion
		has_trait = leader_trait_expertise_voidcraft
		has_trait = leader_trait_expertise_industry
	}
}

# leader that is a scientist
has_scientist_physics_expertise = {
	optimize_memory
	OR = {
		has_trait = leader_trait_expertise_field_manipulation
		has_trait = leader_trait_expertise_particles
		has_trait = leader_trait_expertise_computing
	}
}

# leader that is a scientist
has_scientist_society_expertise = {
	optimize_memory
	OR = {
		has_trait = leader_trait_expertise_psionics
		has_trait = leader_trait_expertise_new_worlds
		has_trait = leader_trait_expertise_statecraft
		has_trait = leader_trait_expertise_biology
		has_trait = leader_trait_expertise_military_theory
	}
}

# leader that is a scientist
has_scientist_engineering_expertise = {
	optimize_memory
	OR = {
		has_trait = leader_trait_expertise_materials
		has_trait = leader_trait_expertise_propulsion
		has_trait = leader_trait_expertise_voidcraft
		has_trait = leader_trait_expertise_industry
	}
}

# leader
# $TRAIT_SUFFIX$ - one of: brainslug, erudite, psionic, cyborg, synthetic, chosen
is_leader_special_trait = {
	optimize_memory
	OR = {
		has_trait = leader_trait_ruler_$TRAIT_SUFFIX$
		has_trait = leader_trait_governor_$TRAIT_SUFFIX$
		has_trait = leader_trait_scientist_$TRAIT_SUFFIX$
		has_trait = leader_trait_admiral_$TRAIT_SUFFIX$
		has_trait = leader_trait_general_$TRAIT_SUFFIX$
	}
}

# leader
is_leader_brainslugged = {
	optimize_memory
	is_leader_special_trait = { TRAIT_SUFFIX = brainslug }
}

# leader
is_leader_erudite = {
	optimize_memory
	is_leader_special_trait = { TRAIT_SUFFIX = erudite }
}

# leader
is_leader_cyborg = {
	optimize_memory
	is_leader_special_trait = { TRAIT_SUFFIX = cyborg }
}

# leader
is_leader_synthetic = {
	optimize_memory
	is_leader_special_trait = { TRAIT_SUFFIX = synthetic }
}

# leader
is_leader_psionic = {
	optimize_memory
	is_leader_special_trait = { TRAIT_SUFFIX = psionic }
}

# leader
is_leader_chosen = {
	optimize_memory
	is_leader_special_trait = { TRAIT_SUFFIX = chosen }
}

# leader
is_leader_chosen_by_covenant = {
	optimize_memory
	OR = {
		has_trait = leader_trait_ruler_composer_chosen
		has_trait = leader_trait_ruler_eater_chosen
		has_trait = leader_trait_ruler_instrument_chosen
		has_trait = leader_trait_ruler_whisperers_chosen
		has_chosen_covenant_trait_non_ruler = yes
	}
}

# any
is_leader_trait_role_weight_enabled = {
	optimize_memory
	has_global_flag = feature_leader_trait_role_weight_enabled
}