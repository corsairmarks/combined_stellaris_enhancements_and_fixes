# this = country
has_ai_and_knows_machines = {
	optimize_memory
	OR = {
		is_mechanical_empire = yes
		has_technology = tech_sapient_ai
		has_technology = tech_combat_computers_3
		has_technology = tech_synthetic_workers
	}
	any_relation = {
		has_communications = prev
		is_robot_empire = yes
	}
}

# check whether the species is undergoing synthetic assimilation
# this = species (current)
# prev = country (assimilator)
is_undergoing_assimilation_synthetic_species = {
	optimize_memory
	has_living_standard = {
		type = living_standard_tech_assimilation
		country = prev
	}
}

# check whether the species is undergoing machine deassimilation
# this = species (current)
# prev = country (assimilator)
is_undergoing_assimilation_unmachine_species = {
	optimize_memory
	has_living_standard = {
		type = living_standard_deassimilation_machine
		country = prev
	}
}

# check whether the species is undergoing cybernetic assimilation (non-hive)
# this = species (current)
# prev = country (assimilator)
is_undergoing_assimilation_cyborg_species = {
	optimize_memory
	OR = {
		AND = {
			prev = { is_gestalt = yes }
			OR = {
				has_living_standard = {
					type = living_standard_cyborg_ego_assimilation
					country = prev
				}
				has_living_standard = {
					type = living_standard_cyborg_ego_assimilation_psionic
					country = prev
				}
			}
		}
		AND = {
			prev = { is_gestalt = no }
			OR = {
				has_living_standard = {
					type = living_standard_cyborg_assimilation
					country = prev
				}
				has_living_standard = {
					type = living_standard_cyborg_assimilation_psionic
					country = prev
				}
			}
		}
	}
}

# check whether the species is undergoing hive assimilation
# this = species (current)
# prev = country (assimilator)
is_undergoing_assimilation_hive_species = {
	optimize_memory
	OR = {
		has_living_standard = {
			type = living_standard_ego_assimilation
			country = prev
		}
		has_living_standard = {
			type = living_standard_ego_assimilation_psionic
			country = prev
		}
	}
}

# check whether the species is undergoing hive deassimilation
# this = species (current)
# prev = country (assimilator)
is_undergoing_assimilation_unhive_species = {
	optimize_memory
	has_living_standard = {
		type = living_standard_deassimilation
		country = prev
	}
	OR = {
		is_same_species = prev.owner_main_species
		prev = { is_homicidal = no }
	}
}

# check whether the species is undergoing cybernetic deassimilation
# this = species (current)
# prev = country (assimilator)
is_undergoing_assimilation_uncyborg_species = {
	optimize_memory
	has_living_standard = {
		type = living_standard_deassimilation_cyborg
		country = prev
	}
}

# check whether the species is undergoing psionic assimilation
# this = species (current)
# prev = country (assimilator)
is_undergoing_assimilation_psionic_species = {
	optimize_memory
	OR = {
		has_living_standard = {
			type = living_standard_psi_assimilation
			country = prev
		}
		has_living_standard = {
			type = living_standard_psi_assimilation_cyborg
			country = prev
		}
	}
}

# this = species
has_any_ascension_species_traits = {
	optimize_memory
	OR = {
		has_trait = trait_latent_psionic
		has_trait = trait_psionic
		has_trait = trait_cybernetic
		has_trait = trait_adaptive_lithoid
		has_trait = trait_rapid_breeders_lithoid
		has_trait = trait_delicious
		has_trait = trait_nerve_stapled
		has_trait = trait_fertile
		has_trait = trait_robust
		has_trait = trait_erudite
		has_trait = trait_advanced_scintillating
		has_trait = trait_advanced_gaseous_byproducts
		has_trait = trait_advanced_volatile_excretions
		has_trait = trait_advanced_phototrophic
		has_trait = trait_advanced_radiotrophic
		has_trait = trait_advanced_budding
		has_trait = trait_vat_grown
		has_trait = trait_felsic
		has_trait = trait_natural_machinist
		has_trait = trait_drake_scaled
		has_trait = trait_voidling
		has_trait = trait_tiyanki
	}
}

# this = species
dm_is_species_smart_enough_for_leadership = {
	optimize_memory
	is_sapient = yes
	NOT = { has_trait = trait_syncretic_proles }
	can_think = yes
}

# this = country
dm_is_necrophage_empire = {
	optimize_memory
	has_origin = origin_necrophage
	has_trait = trait_necrophage
}