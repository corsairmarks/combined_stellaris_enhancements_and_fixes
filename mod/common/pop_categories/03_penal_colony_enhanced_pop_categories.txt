inmate = {
	rank = 0
	clothes_texture_index = 2
	display_category = worker
	change_job_threshold = 1.15
	demotion_time = 0
	display_unemployment = no
	assign_to_pop = {
		is_sapient = yes
		NOR = {
			has_job_category = ruler
			has_job = enforcer
			has_job = telepath
			has_job = soldier
		}
		exists = planet
		planet = {
			OR = {
				has_designation = col_penal
				has_modifier = penal_colony
			}
		}
		exists = owner
		owner = { is_gestalt = no }
	}
	weight = { weight = 13 }
	# these resettlement settings attempt to duplicate the base costs for their respective categories
	allow_resettlement = { NOT = { has_job = criminal } }
	resettlement_cost = {
		trigger = { has_job_category = specialist }
		energy = 250
	}
	resettlement_cost = {
		trigger = { has_job_category = worker }
		energy = 100
	}
	resettlement_cost = {
		trigger = { has_job_category = slave }
		energy = 50
	}
	resettlement_cost = {
		trigger = {
			has_job_category = specialist
			exists = owner
			owner = { NOT = { has_valid_civic = civic_corvee_system } }
		}
		unity = 25
	}
	resettlement_cost = {
		trigger = {
			has_job_category = worker
			exists = owner
			owner = { NOT = { has_valid_civic = civic_corvee_system } }
		}
		unity = 10
	}
	pop_modifier = {
		pop_happiness = -0.25
		pop_political_power = -0.75
		pop_housing_usage_base = 0.75
		pop_amenities_usage_base = 0.75
	}
	triggered_pop_modifier = {
		potential = {
			exists = planet
			planet = { has_modifier = bleak_planet }
		}
		pop_happiness = -0.05
	}
	triggered_pop_modifier = {
		potential = {
			pce_is_nuked_species = no
			exists = planet
			planet = { is_planet_class = pc_nuked }
		}
		pop_happiness = -0.05
	}
	triggered_planet_modifier = {
		potential = { always = yes }
		planet_crime_add = 4
	}
	triggered_planet_modifier = {
		potential = { is_unemployed = yes }
		# unemployed inmates do crime - but unemployment_penalty is only Pops scope
		planet_crime_add = 4
		trade_value_add = -5
		branch_office_criminal_syndicate_value_add = 7.5
	}
	triggered_planet_modifier = {
		potential = { can_assemble_budding_pop = yes }
		planet_pop_assembly_organic_add = @plantoid_budding_rate
	}
	triggered_planet_modifier = {
		potential = { can_assemble_tiyanki_pop = yes }
		planet_pop_assembly_organic_add = @tiyanki_budding_rate
	}
	triggered_pop_modifier = {
		potential = { NOT = { has_trait = trait_noxious } }
		key = trait_noxious
		pop_happiness = 1
		mult = modifier:pop_non_noxious_happiness
	}
	triggered_planet_modifier = {
		potential = { has_trait = trait_noxious }
		key = trait_noxious
		pop_non_noxious_happiness = @noxious_happiness_penalty
	}
	should_apply_unemployment_penalties = { always = yes }
	resources = {
		category = pop_category_inmates

		# Luxuries Upkeep (based on built-in worker strata)
		# This is still necessary in 3.3 in order to avoid overwriting all the standards of living!
		upkeep = {
			trigger = { has_shared_burden_living_standard_type = yes }
			consumer_goods = @living_standard_luxuries_shared_burden
		}
		upkeep = {
			trigger = { has_very_high_living_standard_type = yes }
			consumer_goods = @living_standard_luxuries_very_high
		}
		upkeep = {
			trigger = { has_high_living_standard_type = yes }
			consumer_goods = @living_standard_luxuries_high
		}
		upkeep = {
			trigger = {
				OR = {
					has_normal_living_standard_type = yes
					has_academic_living_standard_type = yes
					has_decadent_living_standard_type = yes
				}
			}
			consumer_goods = @living_standard_luxuries_normal
		}
		upkeep = {
			trigger = { has_stratified_living_standard_type = yes }
			consumer_goods = @living_standard_luxuries_low
		}
		upkeep = {
			trigger = { has_low_living_standard_type = yes }
			consumer_goods = @living_standard_luxuries_very_low
		}

		# Regular food, mineral and energy upkeep.
		inline_script = "pop_categories/regular_upkeep"

		# Additional energy upkeep for cyborgs.
		inline_script = "pop_categories/cyborg_upkeep"

		# Note: hopefully in the future, this gets added to the upkeep inline script file
		# Exotic Metabolism Upkeep
		upkeep = {
			trigger = {
				is_organic_species = yes
				has_trait = trait_exotic_metabolism
			}
			exotic_gases = @exotic_metabolism
		}

		# Lithoid Trait Production
		inline_script = "pop_categories/trait_production"

		# Note: hopefully in the future, this gets added to the production inline script file
		# Exotic Metabolism Production
		produces = {
			trigger = {
				is_organic_species = yes
				has_trait = trait_inorganic_breath
			}
			exotic_gases = @inorganic_breath
		}

		# Note: hopefully in the future, this gets added to the production inline script file
		# Drake-Scaled Production
		produces = {
			trigger = { has_trait = trait_drake_scaled }
			alloys = @drake_scaled_trait_resource_production
		}

		# Police State Production
		produces = {
			trigger = {
				exists = owner
				owner = { has_valid_civic = civic_police_state }
			}
			unity = 1
		}
	}
}