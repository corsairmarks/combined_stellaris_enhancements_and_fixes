# fired when a country finishes being integrated
# this = overlord
# from = subject
on_subject_integrated = {
	events = {
		keep_leaders.5
	}
}

# fired for the attacker upon victory (before controller is switched)
# this = country, leader attacker
# from = country, planet owner
# fromfrom = planet
on_planet_attackers_win = {
	events = {
		keep_leaders.2
	}
}

# fired just before on_leader_death if show_notification = yes (default)
# this = country
# from = leader
on_leader_death_notify = {
	events = {
		keep_leaders.100
	}
}

# fired when a leader has died
# this = country
# from = leader
on_leader_death = {
	events = {
		keep_leaders_bonus_traits.21
		# keep_leaders.110
	}
}

# fired when a leader is hired 
# this = leader
on_leader_hired = {
	events = {
		keep_leaders_bonus_traits.22
	}
}

# fired when a leader has been fired
# this = country
# from = leader
on_leader_fired = {
	events = {
		keep_leaders_bonus_traits.21
		# keep_leaders.110
	}
}

# fired when my custom code changes a leader's owner
# this = leader (post-owner change)
on_leader_owner_changed = {
	events = {
		paragon.450
		keep_leaders.164
		keep_leaders.246
	}
}

# fired as new ruler has been set
# this = country
on_ruler_set = {
	events = {
		keep_leaders_bonus_traits.20
	}
}

# fired when a ruler has been removed
# this = country
# from = leader, previous ruler
on_ruler_removed = {
	events = {
		keep_leaders_bonus_traits.19
	}
}

# fired whenever a new owner is set for a planet, be it after a war or through a trade
# this = planet (after new owner set)
# from = country (new owner)
# fromfrom = country (former owner, if any)
on_planet_transfer = {
	events = {
		keep_leaders.3
		keep_leaders.21
		keep_leaders.31
		keep_leaders.41
		keep_leaders.51
	}
}