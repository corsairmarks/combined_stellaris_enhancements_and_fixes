# works for species that are hive/machine/not either
defined_text = { # scope with species
	name = GetSpeciesUnitDrone
	text = {
		trigger = {
			is_hive_species = yes
		}
		localization_key = getunitdrone_unit
	}
	text = {
		trigger = {
			is_machine_species = yes
		}
		localization_key = getunitdrone_drone
	}
	text = { # fallback if not hive/machine
		trigger = {
			is_hive_species = no
			is_machine_species = no
		}
		localization_key = getunitdrone_leader
	}
}

# assumes that anything organic used to be hive, anything robotic used to be a machine, and a fallback for things that were neither organic not robotic
defined_text = { # scope with species
	name = GetSpeciesPreviouslyUnitDrone
	text = {
		trigger = {
			is_organic_species = yes
		}
		localization_key = getunitdrone_unit
	}
	text = {
		trigger = {
			is_robotic_species = yes
		}
		localization_key = getunitdrone_drone
	}
	text = { # fallback if not hive/machine
		trigger = {
			is_organic_species = no
			is_robotic_species = no
		}
		localization_key = getunitdrone_leader
	}
}

# 