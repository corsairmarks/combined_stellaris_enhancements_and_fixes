namespace = primitive_conquest_enhancements

# NB NOTE: after more investigation, this event adds districts and buildings a bit more intelligently,
# following the example in observation.3009 (which now points here). It also accounts for conquering lithoid
# pre-FTLs, which logically wouldn't have needed farming, and phototrophic/raditrophic species which need
# more energy.  The base game has addressed some of these issues, but not the main pre-FTL conquest event.
# triggered by on_planet_transfer
# root = planet (after new owner set)
# from = country, new owner
# fromfrom = country, former owner
planet_event = {
	id = primitive_conquest_enhancements.1
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = from
		exists = fromfrom
		OR = {
			fromfrom = { is_primitive = yes }
			AND = {
				from = {
					is_country = fromfrom
					can_into_space = yes
				}
			}
		}
	}
	immediate = {
		log = "pre-ftl planet transferred: add districts/buildings to [This.GetName] (previously owned by [FromFrom.GetRealName]), constructing for the [From.GetRealName]"
		fromfrom = {
			save_event_target_as = conquered_primitive_civilization
			owner_species = { save_event_target_as = conquered_primitive_species }
		}
		remove_all_buildings = yes # this event fires before the destroy_trigger on the buildings fires, so as of 3.6 "Orion" the buildings must be explicitly cleared
		if = {
			limit = { from = { is_hive_empire = yes } }
			add_building = building_hive_capital
			if = {
				limit = { from = { has_origin = origin_progenitor_hive } }
				add_building = building_offspring_nest
			}
			else = {
				add_building = building_spawning_pool
			}
		}
		else_if = {
			limit = {
				num_pops <= 20
				fromfrom = { has_industrial_age_or_greater = no }
			}
			if = {
				limit = { from = { is_machine_empire = yes } }
				add_building = building_deployment_post
			}
			else = {
				add_building = building_colony_shelter
			}
		}
		else = {
			if = {
				limit = { from = { is_machine_empire = yes } }
				add_building = building_machine_capital
			}
			else = {
				add_building = building_capital
			}
		}
		if = {
			limit = {
				is_planet_class = pc_ringworld_habitable
				planet_size = 10
			}
			change_pc = pc_shattered_ring_habitable
			set_planet_size = 25
			# blockers match those added by generate_start_buildings_and_districts for origin_shattered_ring
			add_deposit = d_segment_rubble_1
			add_deposit = d_segment_rubble_2
			add_deposit = d_segment_rubble_3
			add_deposit = d_segment_rubble_4
			add_deposit = d_decrepit_tunnels_1
			add_deposit = d_decrepit_tunnels_1
			add_deposit = d_decrepit_tunnels_1
		}
		if = {
			limit = { uses_district_set = ring_world }
			if = {
				limit = { from = { has_valid_civic = civic_machine_servitor } }
				pce_add_building_if_free = { BUILDING = building_organic_sanctuary }
			}
			pce_add_rw_urban_district = yes
			if = {
				limit = {
					OR = {
						num_pops >= @bronze_age_pops
						fromfrom = { has_bronze_age_or_greater = yes }
					}
				}
				if = {
					limit = { event_target:conquered_primitive_civilization = { is_lithoid_empire = no } }
					pce_add_district_if_free = { DISTRICT = district_rw_farming }
					pce_add_building_if_free = { BUILDING = building_chemical_plant }
				}
				else_if = {
					limit = { from = { is_gestalt = no } }
					pce_add_rw_urban_district = yes
					if = {
						limit = {
							OR = {
								num_pops >= @renaissance_age_pops
								fromfrom = { has_renaissance_age_or_greater = yes }
							}
						}
						add_primitive_conquest_unity_building_if_free = yes
						if = {
							limit = {
								OR = {
									num_pops >= @steam_age_pops
									fromfrom = { has_steam_age_or_greater = yes }
								}
							}
							add_primitive_conquest_unity_building_if_free = yes
						}
					}
				}
				if = {
					limit = {
						OR = {
							num_pops >= @steam_age_pops
							fromfrom = { has_steam_age_or_greater = yes }
						}
					}
					if = {
						limit = { from = { has_valid_civic = civic_machine_servitor } }
						pce_add_building_if_free = { BUILDING = building_organic_sanctuary }
					}
					else_if = {
						limit = { from = { is_gestalt = no } }
						pce_add_building_if_free = { BUILDING = building_factory_1 }
					}
					if = {
						limit = {
							OR = {
								num_pops >= @industrial_age_pops
								fromfrom = { has_industrial_age_or_greater = yes }
							}
						}
						if = {
							limit = { from = { has_valid_civic = civic_machine_servitor } }
							pce_add_building_if_free = { BUILDING = building_organic_sanctuary }
						}
						else = {
							pce_add_building_if_free = { BUILDING = building_foundry_1 }
							add_primitive_conquest_science_building_if_free = yes
						}
						if = {
							limit = {
								OR = {
									num_pops >= @machine_age_pops
									fromfrom = { has_machine_age_or_greater = yes }
								}
							}
							if = {
								limit = { from = { is_gestalt = no } }
								pce_add_district_if_free = { DISTRICT = district_rw_commercial }
							}
							else = {
								pce_add_district_if_free = { DISTRICT = district_rw_generator }
							}
							pce_add_building_if_free = { BUILDING = building_crystal_plant }
						}
					}
				}
			}
		}
		else = {
			if = {
				limit = { from = { NOT = { has_valid_civic = civic_machine_servitor } } }
				pce_add_urban_district = yes
			}
			else = {
				pce_add_building_if_free = { BUILDING = building_organic_sanctuary }
			}
			pce_add_primitive_species_appropriate_food_district = yes
			if = {
				limit = {
					OR = {
						num_pops >= @bronze_age_pops
						fromfrom = { has_bronze_age_or_greater = yes }
					}
				}
				pce_add_primitive_species_appropriate_food_district = yes
				pce_add_planet_appropriate_mining_district = yes
				if = {
					limit = {
						OR = {
							num_pops >= @late_medieval_age_pops
							fromfrom = { has_late_medieval_or_greater = yes }
						}
					}
					pce_add_planet_appropriate_mining_district = yes
					if = {
						limit = {
							OR = {
								num_pops >= @renaissance_age_pops
								fromfrom = { has_renaissance_age_or_greater = yes }
							}
						}
						pce_add_primitive_species_appropriate_food_district = yes
						if = {
							limit = {
								OR = {
									num_pops >= @steam_age_pops
									fromfrom = { has_steam_age_or_greater = yes }
								}
							}
							if = {
								limit = { from = { NOT = { has_valid_civic = civic_machine_servitor } } }
								pce_add_urban_district = yes
							}
							else = {
								pce_add_building_if_free = { BUILDING = building_organic_sanctuary }
							}
							pce_add_district_if_free = { DISTRICT = district_industrial }
							if = {
								limit = {
									OR = {
										num_pops >= @industrial_age_pops
										fromfrom = { has_industrial_age_or_greater = yes }
									}
								}
								pce_add_planet_appropriate_commercial_or_generator_district = yes
								if = {
									limit = { from = { NOT = { has_valid_civic = civic_machine_servitor } } }
									pce_add_planet_appropriate_commercial_or_generator_district = yes
								}
								else = {
									pce_add_urban_district = yes
									pce_add_building_if_free = { BUILDING = building_organic_sanctuary }
								}
								pce_add_district_if_free = { DISTRICT = district_industrial }
								if = {
									limit = {
										from = { NOT = { has_valid_civic = civic_machine_servitor } } # servitors get sanctuaries instead of the other bonus infrastructure
										OR = {
											num_pops >= @machine_age_pops
											fromfrom = { has_machine_age_or_greater = yes }
										}
									}
										add_primitive_conquest_science_building_if_free = yes
									if = {
										limit = {
											OR = {
												num_pops >= @atomic_age_pops
												fromfrom = { has_atomic_age_or_greater = yes }
											}
										}
										pce_add_urban_district = yes
										if = {
											limit = {
												OR = {
													num_pops >= @early_space_age_pops
													fromfrom = { has_early_space_age_or_greater = yes }
												}
											}
											add_primitive_conquest_unity_building_if_free = yes
										}
									}
								}
							}
						}
					}
				}
			}
		}
		every_owned_pop = {
			limit = { is_unemployed = yes }
			clear_pop_category = yes
		}
		check_planet_employment = yes
	}
}