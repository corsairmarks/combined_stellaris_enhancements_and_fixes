namespace = ringworld_origin_rebalance

planet_event = {
	id = ringworld_origin_rebalance.1
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		owner = {
			has_origin = origin_shattered_ring
			OR = {
				has_valid_civic = civic_machine_servitor
				has_valid_civic = civic_machine_assimilator
			}
		}
	}
	immediate = {
		owner = { change_non_robotic_species_habitability = { PLANET_CLASS = ringworld_habitable } }
	}
}

planet_event = {
	id = ringworld_origin_rebalance.2
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		owner = { has_origin = origin_shattered_ring }
	}
	immediate = {
		owner = { save_event_target_as = initializing_country }
		solar_system = {
			reset_ringworld_section_graphical_culture = { SECTION_TYPE = habitable }
			reset_ringworld_section_graphical_culture = { SECTION_TYPE = habitable_damaged }
			reset_ringworld_section_graphical_culture = { SECTION_TYPE = tech }
			reset_ringworld_section_graphical_culture = { SECTION_TYPE = tech_damaged }
			reset_ringworld_section_graphical_culture = { SECTION_TYPE = seam }
			reset_ringworld_section_graphical_culture = { SECTION_TYPE = seam_damaged }
			every_system_megastructure = {
				limit = { is_megastructure_type = ring_world_ruined }
				set_graphical_culture = event_target:initializing_country
			}
		}
	}
}

planet_event = {
	id = ringworld_origin_rebalance.3
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		owner = {
			has_origin = origin_machine
			OR = {
				has_valid_civic = civic_machine_servitor # just in case someone allows it...
				has_valid_civic = civic_machine_assimilator
			}
		}
	}
	immediate = {
		owner = { change_non_robotic_species_habitability = { PLANET_CLASS = machine } }
	}
}